{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Whitehat Jr\\\\material\\\\whitehat student project\\\\shishir\\\\School-Complaints\\\\screens\\\\WriteComplaint.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Header } from 'react-native-elements';\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar WriteComplaint = function (_React$Component) {\n  _inherits(WriteComplaint, _React$Component);\n\n  var _super = _createSuper(WriteComplaint);\n\n  function WriteComplaint(props) {\n    var _this;\n\n    _classCallCheck(this, WriteComplaint);\n\n    _this = _super.call(this, props);\n\n    _this.submitQuery = function () {\n      db.collection(\"complaints\").add({\n        title: _this.state.title,\n        student: _this.state.student,\n        query: _this.state.query\n      });\n\n      _this.setState({\n        title: '',\n        student: '',\n        query: ''\n      });\n    };\n\n    _this.state = {\n      title: '',\n      student: '',\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(WriteComplaint, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        backgroundColor: '#E63946',\n        centerComponent: {\n          text: 'Complaint Forum',\n          style: {\n            color: 'black',\n            fontSize: 20,\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Title\",\n        placeholderTextColor: \"black\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            title: text\n          });\n        },\n        value: this.state.title,\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Student Name\",\n        placeholderTextColor: \"black\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            student: text\n          });\n        },\n        value: this.state.student,\n        style: styles.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Your Complaint/Query\",\n        placeholderTextColor: \"black\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            query: text\n          });\n        },\n        value: this.state.query,\n        style: styles.storyText,\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: this.submitQuery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return WriteComplaint;\n}(React.Component);\n\nexport { WriteComplaint as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  title: {\n    height: 40,\n    borderWidth: 2,\n    marginTop: 40,\n    margin: 10,\n    color: 'black',\n    padding: 6\n  },\n  author: {\n    height: 40,\n    borderWidth: 2,\n    margin: 10,\n    padding: 6\n  },\n  storyText: {\n    height: 250,\n    borderWidth: 2,\n    margin: 10,\n    padding: 6\n  },\n  submitButton: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    backgroundColor: '#1D3557',\n    width: 80,\n    height: 40,\n    color: 'black'\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: 'white',\n    fontWeight: 'bold',\n    color: 'black'\n  }\n});","map":{"version":3,"sources":["D:/Whitehat Jr/material/whitehat student project/shishir/School-Complaints/screens/WriteComplaint.js"],"names":["React","TextInput","Header","db","firebase","WriteComplaint","props","submitQuery","collection","add","title","state","student","query","setState","styles","container","text","style","color","fontSize","fontWeight","author","storyText","submitButton","buttonText","Component","StyleSheet","create","flex","backgroundColor","height","borderWidth","marginTop","margin","padding","justifyContent","alignSelf","width","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport {Header} from 'react-native-elements';\r\nimport db from '../config'\r\nimport firebase from 'firebase'\r\n \r\nexport default class WriteComplaint extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            student: '',\r\n            query: '',\r\n        }\r\n    }\r\n\r\n    submitQuery = ()=>{\r\n        db.collection(\"complaints\").add({\r\n            title : this.state.title,\r\n            student: this.state.student,\r\n            query: this.state.query\r\n\r\n        })\r\n        this.setState({\r\n            title :'',\r\n            student:'',\r\n            query:''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={styles.container}>\r\n                <Header \r\n                    backgroundColor = {'#E63946'}\r\n                     centerComponent = {{\r\n                        text : 'Complaint Forum',\r\n                        style : { color: 'black', fontSize: 20,fontWeight:'bold'}\r\n                    }}\r\n                />\r\n                <TextInput \r\n                    placeholder=\"Title\"\r\n                    placeholderTextColor='black'\r\n                    onChangeText= {(text)=>{\r\n                        this.setState({\r\n                            title: text\r\n                        })\r\n                    }}\r\n                    value={this.state.title}\r\n                    style={styles.title}/>\r\n                <TextInput\r\n                    placeholder=\"Student Name\"\r\n                    placeholderTextColor='black'\r\n                    onChangeText= {(text)=>{\r\n                        this.setState({\r\n                            student: text\r\n                        })\r\n                    }}\r\n                    value={this.state.student}\r\n                    style={styles.author} />\r\n                <TextInput \r\n                    placeholder=\"Your Complaint/Query\"\r\n                    placeholderTextColor='black'\r\n                    onChangeText= {(text)=>{\r\n                        this.setState({\r\n                            query: text\r\n                        })\r\n                    }}\r\n                    value={this.state.query}\r\n                    style={styles.storyText}\r\n                    multiline={true}/>\r\n                \r\n                <TouchableOpacity\r\n                    style={styles.submitButton}\r\n                   onPress = {this.submitQuery}\r\n                   >\r\n                    <Text style={styles.buttonText}>Submit</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  title:{\r\n      height: 40,\r\n      borderWidth: 2,\r\n      marginTop: 40,\r\n      margin: 10,\r\n      color:'black',\r\n      padding: 6,\r\n\r\n  },\r\n  author: {\r\n      height: 40,\r\n      borderWidth: 2,\r\n      margin: 10,\r\n       padding: 6,\r\n  },\r\n  storyText: {\r\n      height: 250,\r\n      borderWidth: 2,\r\n      margin: 10, \r\n      padding: 6,\r\n  },\r\n  submitButton:{\r\n      justifyContent: 'center',\r\n      alignSelf: 'center',\r\n      backgroundColor: '#1D3557',\r\n      width: 80,\r\n      height: 40,color:'black',\r\n  },\r\n  buttonText: {\r\n      textAlign: 'center',\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      color:'black',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}